steps:
  - name: gcr.io/cloud-builders/gcloud
    id: Decrypt service account secret using KMS
    args:
    - kms
    - decrypt
    - --ciphertext-file=${_KMS_KEYNAME}.enc
    - --plaintext-file=${_KMS_KEYNAME}
    - --location=global
    - --keyring=cloud-build
    - --key=cloud-build-gke-encrypt
    - --project=$PROJECT_ID

  - name: gcr.io/cloud-builders/gcloud
    id: Authenticate as service account user
    args:
    - auth
    - activate-service-account
    - --project=$PROJECT_ID
    - --key-file=${_KMS_KEYNAME}

  - name: 'gcr.io/$PROJECT_ID/${gke-networks-helper-image}'
    id: Add cloud build instance IP
    entrypoint: 'python'
    args: ['/code/gke-master-authorized-network-add.py']
    env:
    - 'BUILD_ID=$BUILD_ID'
    - 'PROJECT_ID=$PROJECT_ID'
    - 'CLUSTER_REGION=${_CLUSTER_REGION}'
    - 'CLUSTER_NAME=${_CLUSTER_NAME}'

  - name: "gcr.io/cloud-builders/gcloud"
    id: Update deployment image in GKE
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud components install kubectl
        gcloud container clusters get-credentials ${_CLUSTER_NAME} --zone ${_CLUSTER_REGION}
        kubectl set image deployment/${_DEPLOYMENT_NAME} ${_IMAGE_NAME}=gcr.io/$PROJECT_ID/${_IMAGE_NAME}:latest

  - name: 'gcr.io/$PROJECT_ID/${gke-networks-helper-image}'
    id: Remove cloud build instance IP
    entrypoint: 'python'
    args: ['/code/gke-master-authorized-network-delete.py']
    env:
    - 'PROJECT_ID=$PROJECT_ID'
    - 'CLUSTER_REGION=${_CLUSTER_REGION}'
    - 'CLUSTER_NAME=${_CLUSTER_NAME}'
